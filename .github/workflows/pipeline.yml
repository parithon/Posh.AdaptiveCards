name: Build Module

on:
  pull_request:
    branches: [ main ]

  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: pwsh
    steps:
      - uses: actions/checkout@main
      - name: Set required PowerShell modules
        id: psmodulecache
        uses: potatoqualitee/psmodulecache@v3.5
        with:
          modules-to-cache: Pester, PSScriptAnalyzer, InvokeBuild, platyPS
      - name: Setup PowerShell module cache
        id: cacher
        uses: actions/cache@v2
        with:
          path: ${{ steps.psmodulecache.outputs.modulepath }}
          key: ${{ steps.psmodulecache.outputs.keygen }}
      - name: Install PowerShell modules
        if: steps.cacher.outputs.cache-hit != 'true'
        uses: potatoqualitee/psmodulecache@v3.5
      - name: Test PowerShell Core
        run: |
          Write-Output $PSVersionTable
          dotnet --info
      - name: Test PowerShell
        if: matrix.os == 'windows-latest'
        shell: powershell
        run: |
          Write-Output $PSVersionTable
          dotnet --info
